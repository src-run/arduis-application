
##
## This file is part of the `src-run/raspetub-arduino-app` package.
##
## (c) Rob Frawley 2nd <rmf@src.run>
##
## For the full copyright and license information, view the LICENSE.md
## file distributed with this source code.
##


#
# PLATFORMIO CONFIGURATION
# define general configuration for platformio handling of environment
#

[platformio]

default_envs = builds_target__prod_norm__mega


#
# COMMON CONFIGS: GLOBALS
# define global common configuration pulled in by all environments
#

[config_common__globals]

lib_deps_internal =
    SPI
    Wire

lib_deps_external =
    # TEMPORARY FIX FOR ARM/SAM PLATFORM USING platformio/toolchain-gccarmnoneeabi >= 1.90201.191206
    # fastled/FastLED                               @ ^3.5.0
    https://github.com/robfrawley/FastLED.git#bugfix-narrowing-conversion-on-toolchain-gccarmnoneeabi-ge-1.90201.191206
    rafaelnsantos/Relay                           @ ^1.0.0
    adafruit/RTClib                               @ ^2.1.1
    adafruit/Adafruit VEML7700 Library            @ ^2.1.2
    adafruit/Adafruit SHT4x Library               @ ^1.0.2
    adafruit/Adafruit TSL2591 Library             @ ^1.4.3
    sparkfun/SparkFun Qwiic Twist Arduino Library @ ^1.0.4
    bblanchon/ArduinoJson                         @ ^6.20.0
    robtillaart/ACS712                            @ ^0.3.3
    robtillaart/RunningMedian                     @ ^0.3.7
    robtillaart/RunningAverage                    @ ^0.4.3

preprocessor_symbols =
    -D ARDUIS_PIO_FRAMEWORK=$PIOFRAMEWORK
    -D ARDUIS_PIO_PLAT_TYPE=$PIOPLATFORM
    -D ARDUIS_PIO_MAKE_TYPE=$PIOENV
    -D ARDUIS_PIO_ROOT_PATH=$PROJECT_DIR
    -D ARDUIS_PIO_MAKE_PATH=$BUILD_DIR
    -D ARDUIS_PIO_MAKE_TIME=$UNIX_TIME
    -D ARDUIS_VERSION_MAJOR=0
    -D ARDUIS_VERSION_MINOR=1
    -D ARDUIS_VERSION_PATCH=0

i2c_device_directory_json_file_path = shared/fixtures/i2c_device_directory__using.json

extra_scripts =
    pre:shared/scripts/call-pref__run-enviornment-tests.py
    post:shared/scripts/call-post__run-enviornment-tests.py
    post:shared/scripts/call-post__cfg-build-actions.py

build_flags =
    ${config_common__globals.preprocessor_symbols}
    -flto
    -Os
    -Wl,-u,vfprintf
    -lm
    -lprintf_flt
    !python shared/scripts/build-flag__define-macro__json-i2c-device-info-directory.py

build_src_flags   = -Werror=all -Wall #-Wpedantic
build_unflags     = #-Werror=all -Wall
serial_baud       = 115200


#
# COMMON CONFIGS: RELEASE TYPES
# define global common configuration pulled in by all environments for each release type (default=release; verbose=debug)
#

[config_common__norm]

build_flags       = ${config_common__globals.build_flags}     -D RELEASE
build_src_flags   = ${config_common__globals.build_src_flags} -D RELEASE
build_unflags     = ${config_common__globals.build_unflags}

[config_common__debg]

build_flags       = ${config_common__globals.build_flags}     -D DEBUG
build_src_flags   = ${config_common__globals.build_src_flags} -D DEBUG
build_unflags     = ${config_common__globals.build_unflags}


#
# BUILD TARGET: ARDUINO MEGA
# define build targets for arduino mega platform
#

[device_target__prod__mega]

board             = megaatmega2560
platform          = atmelavr
platform_packages =
    framework-arduino-avr@>=5.1.0
    toolchain-atmelavr@>=3.70300.220127

[device_target__next__mega]

board             = ${device_target__prod__mega.board}
platform          = https://github.com/platformio/platform-atmelavr.git
platform_packages = ${device_target__prod__mega.platform_packages}


#
# BUILD TARGET: ARDUINO DUE
# define build targets for arduino due platform
#

[device_target__prod__due]

board             = due
platform          = atmelsam
platform_packages =
    framework-arduino-sam@>=1.6.12
    framework-cmsis@>=2.50700.210515
    framework-cmsis-atmel@>=1.2.2
    toolchain-gccarmnoneeabi@>=1.100301.220327

[device_target__next__due]

board             = ${device_target__prod__due.board}
platform          = https://github.com/platformio/platform-atmelsam.git
platform_packages = ${device_target__prod__due.platform_packages}


#
# BUILD TARGET: METRO M4 AIRLIFT LITE
# define build targets for the adafruit metro m4 airlift lite platform
#

[device_target__prod__metrom4]

board             = adafruit_metro_m4_airliftlite
platform          = atmelsam
platform_packages =
    framework-arduino-samd-adafruit@>=1.7.10
    framework-cmsis@>=2.50700.210515
    framework-cmsis-atmel@>=1.2.2
    toolchain-gccarmnoneeabi@>=1.100301.220327

[device_target__next__metrom4]

board             = ${device_target__prod__metrom4.board}
platform          = https://github.com/platformio/platform-atmelsam.git
platform_packages = ${device_target__prod__metrom4.platform_packages}


#
# BUILD ENV COMMON: BASE CONFIG
# define base build environment configuration shared by all other environments
#

[env]

framework         = arduino

upload_speed      = ${config_common__globals.serial_baud}
monitor_speed     = ${config_common__globals.serial_baud}

extra_scripts     = ${config_common__globals.extra_scripts}
lib_ldf_mode      = chain+ #deep+
lib_compat_mode   = strict
lib_deps          =
    ${config_common__globals.lib_deps_internal}
    ${config_common__globals.lib_deps_external}

#
# BUILD ENV TARGET: ARDUINO MEGA
# define build enviornment targets (prod/norm, prod/debg, next/norm, next/debg) specific to the arduino mega platform
#

[env:builds_target__prod_norm__mega]

build_type        = release
platform          = ${device_target__prod__mega.platform}
platform_packages = ${device_target__prod__mega.platform_packages}
board             = ${device_target__prod__mega.board}
build_flags       = ${config_common__norm.build_flags}
build_src_flags   = ${config_common__norm.build_src_flags}
build_unflags     = ${config_common__norm.build_unflags}

[env:builds_target__prod_debg__mega]

build_type        = debug
platform          = ${device_target__prod__mega.platform}
platform_packages = ${device_target__prod__mega.platform_packages}
board             = ${device_target__prod__mega.board}
build_flags       = ${config_common__debg.build_flags}
build_src_flags   = ${config_common__debg.build_src_flags}
build_unflags     = ${config_common__debg.build_unflags}

[env:builds_target__next_norm__mega]

build_type        = release
platform          = ${device_target__next__mega.platform}
platform_packages = ${device_target__next__mega.platform_packages}
board             = ${device_target__next__mega.board}
build_flags       = ${config_common__norm.build_flags}
build_src_flags   = ${config_common__norm.build_src_flags}
build_unflags     = ${config_common__norm.build_unflags}

[env:builds_target__next_debg__mega]

build_type        = debug
platform          = ${device_target__next__mega.platform}
platform_packages = ${device_target__next__mega.platform_packages}
board             = ${device_target__next__mega.board}
build_flags       = ${config_common__debg.build_flags}
build_src_flags   = ${config_common__debg.build_src_flags}
build_unflags     = ${config_common__debg.build_unflags}


#
# BUILD ENV TARGET: ARDUINO DUE
# define build enviornment targets (prod/norm, prod/debg, next/norm, next/debg) specific to the arduino due platform
#

[env:builds_target__prod_norm__due]

build_type        = release
platform          = ${device_target__prod__due.platform}
platform_packages = ${device_target__prod__due.platform_packages}
board             = ${device_target__prod__due.board}
build_flags       = ${config_common__norm.build_flags}
build_src_flags   = ${config_common__norm.build_src_flags}
build_unflags     = ${config_common__norm.build_unflags}
    -lprintf_flt

[env:builds_target__prod_debg__due]

build_type        = debug
platform          = ${device_target__prod__due.platform}
platform_packages = ${device_target__prod__due.platform_packages}
board             = ${device_target__prod__due.board}
build_flags       = ${config_common__debg.build_flags}
build_src_flags   = ${config_common__debg.build_src_flags}
build_unflags     = ${config_common__debg.build_unflags}
    -lprintf_flt

[env:builds_target__next_norm__due]

build_type        = release
platform          = ${device_target__next__due.platform}
platform_packages = ${device_target__next__due.platform_packages}
board             = ${device_target__next__due.board}
build_flags       = ${config_common__norm.build_flags}
build_src_flags   = ${config_common__norm.build_src_flags}
build_unflags     = ${config_common__norm.build_unflags}
    -lprintf_flt

[env:builds_target__next_debg__due]

build_type        = debug
platform          = ${device_target__next__due.platform}
platform_packages = ${device_target__next__due.platform_packages}
board             = ${device_target__next__due.board}
build_flags       = ${config_common__debg.build_flags}
build_src_flags   = ${config_common__debg.build_src_flags}
build_unflags     = ${config_common__debg.build_unflags}
    -lprintf_flt


#
# BUILD ENV TARGET: METRO M4 AIRLIFT LITE
# define build enviornment targets (prod/norm, prod/debg, next/norm, next/debg) specific to the adafruit metro m4 airlift lite platform
#

[env:builds_target__prod_norm__metrom4]

build_type        = release
platform          = ${device_target__prod__metrom4.platform}
platform_packages = ${device_target__prod__metrom4.platform_packages}
board             = ${device_target__prod__metrom4.board}
build_flags       = ${config_common__norm.build_flags}
build_src_flags   = ${config_common__norm.build_src_flags}
build_unflags     = ${config_common__norm.build_unflags}
    -lprintf_flt
    -larm_cortexM4lf_math

[env:builds_target__prod_debg__metrom4]

build_type        = debug
platform          = ${device_target__prod__metrom4.platform}
platform_packages = ${device_target__prod__metrom4.platform_packages}
board             = ${device_target__prod__metrom4.board}
build_flags       = ${config_common__debg.build_flags}
build_src_flags   = ${config_common__debg.build_src_flags}
build_unflags     = ${config_common__debg.build_unflags}
    -lprintf_flt
    -larm_cortexM4lf_math

[env:builds_target__next_norm__metrom4]

build_type        = release
platform          = ${device_target__next__metrom4.platform}
platform_packages = ${device_target__next__metrom4.platform_packages}
board             = ${device_target__next__metrom4.board}
build_flags       = ${config_common__norm.build_flags}
build_src_flags   = ${config_common__norm.build_src_flags}
build_unflags     = ${config_common__norm.build_unflags}
    -lprintf_flt
    -larm_cortexM4lf_math

[env:builds_target__next_debg__metrom4]

build_type        = debug
platform          = ${device_target__next__metrom4.platform}
platform_packages = ${device_target__next__metrom4.platform_packages}
board             = ${device_target__next__metrom4.board}
build_flags       = ${config_common__debg.build_flags}
build_src_flags   = ${config_common__debg.build_src_flags}
build_unflags     = ${config_common__debg.build_unflags}
    -lprintf_flt
    -larm_cortexM4lf_math
