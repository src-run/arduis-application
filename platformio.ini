
##
## This file is part of the `src-run/raspetub-arduino-app` package.
##
## (c) Rob Frawley 2nd <rmf@src.run>
##
## For the full copyright and license information, view the LICENSE.md
## file distributed with this source code.
##

#
# define general configuration for platformio handling of environment
#

[platformio]

default_envs = release_due


#
# define faux shared configurations that can be pulled in by real build environments
#

[common]

lib_deps_internal =
    SPI
    Wire

lib_deps_external =
#    fastled/FastLED @ ^3.5.0
#   TEMPORARY FIX FOR ARM/SAM PLATFORM USING platformio/toolchain-gccarmnoneeabi >= 1.90201.191206
    https://github.com/robfrawley/FastLED.git#bugfix-narrowing-conversion-on-toolchain-gccarmnoneeabi-ge-1.90201.191206
    rafaelnsantos/Relay @ ^1.0.0
    adafruit/RTClib @ ^2.1.1
    adafruit/Adafruit VEML7700 Library @ ^2.1.2
    adafruit/Adafruit SHT4x Library @ ^1.0.2
    adafruit/Adafruit TSL2591 Library @ ^1.4.3
    robtillaart/ACS712 @ ^0.3.3
    sparkfun/SparkFun Qwiic Twist Arduino Library @ ^1.0.4
    bblanchon/ArduinoJson @ ^6.20.0
#    infineon/arduino-optiga-trust-m @ ^1.1.0
#    DebounceEvent@^2.0.5
#    RTClib@^1.3.3
#    RunningMedian@^0.1
#    RunningAverage@^0.2

preprocessor_symbols =
    -D ARDUIS_PIO_FRAMEWORK=$PIOFRAMEWORK
    -D ARDUIS_PIO_PLAT_TYPE=$PIOPLATFORM
    -D ARDUIS_PIO_MAKE_TYPE=$PIOENV
    -D ARDUIS_PIO_ROOT_PATH=$PROJECT_DIR
    -D ARDUIS_PIO_MAKE_PATH=$BUILD_DIR
    -D ARDUIS_PIO_MAKE_TIME=$UNIX_TIME
    -D ARDUIS_VERSION_MAJOR=0
    -D ARDUIS_VERSION_MINOR=1
    -D ARDUIS_VERSION_PATCH=0

build_flags =
    ${common.preprocessor_symbols}
    -flto
    -O2
    -Wl,-u,vfprintf
    -lm
    -lprintf_flt
    !python shared/scripts/call__i2c_device_list_env.py

i2c_device_list_json_file_name = shared/fixtures/I2CDeviceList.json

build_src_flags   = -Wall #-Wpedantic
build_unflags     = -Werror=all -Wall
build_src_unflags = -Werror=all -Wall

#serial_port       = COM6
serial_baud       = 115200

[env]

framework         = arduino

#upload_port       = ${common.serial_port}
upload_speed      = ${common.serial_baud}
#monitor_port      = ${common.serial_port}
monitor_speed     = ${common.serial_baud}

lib_ldf_mode      = deep+
lib_compat_mode   = strict
lib_deps          =
    ${common.lib_deps_internal}
    ${common.lib_deps_external}

[common_release]

build_flags       = ${common.build_flags}     -D RELEASE
build_src_flags   = ${common.build_src_flags} -D RELEASE
build_unflags     = ${common.build_unflags}
build_src_unflags = ${common.build_src_unflags}

[common_debug]

build_flags       = ${common.build_flags}     -D DEBUG
build_src_flags   = ${common.build_src_flags} -D DEBUG
build_unflags     = ${common.build_unflags}
build_src_unflags = ${common.build_src_unflags}

[common_prod]

board             = megaatmega2560
platform          = atmelavr
platform_packages =
    framework-arduino-avr@>=5.1.0
    toolchain-atmelavr@>=3.70300.220127

[common_devs]

board             = ${common_prod.board}
platform          = https://github.com/platformio/platform-atmelavr.git
platform_packages = ${common_prod.platform_packages}

[common_prod_due]

board             = due
platform          = atmelsam
platform_packages =
    framework-arduino-sam@>=1.6.12
    framework-cmsis@>=2.50700.210515
    framework-cmsis-atmel@>=1.2.2
    toolchain-gccarmnoneeabi@>=1.100301.220327

[common_devs_due]

board             = ${common_prod_due.board}
platform          = https://github.com/platformio/platform-atmelsam.git
platform_packages = ${common_prod_due.platform_packages}

[common_prod_metrom4]

board             = adafruit_metro_m4_airliftlite
platform          = atmelsam
platform_packages =
    framework-arduino-samd-adafruit@>=1.7.10
    framework-cmsis@>=2.50700.210515
    framework-cmsis-atmel@>=1.2.2
    toolchain-gccarmnoneeabi@>=1.100301.220327

[common_devs_metrom4]

board             = ${common_prod_metrom4.board}
platform          = https://github.com/platformio/platform-atmelsam.git
platform_packages = ${common_prod_metrom4.platform_packages}

[env:release]

build_type        = release
platform          = ${common_prod.platform}
platform_packages = ${common_prod.platform_packages}
board             = ${common_prod.board}
build_flags       = ${common_release.build_flags}
build_src_flags   = ${common_release.build_src_flags}
build_unflags     = ${common_release.build_unflags}

[env:debug]

build_type        = debug
platform          = ${common_prod.platform}
platform_packages = ${common_prod.platform_packages}
board             = ${common_prod.board}
build_flags       = ${common_debug.build_flags}
build_src_flags   = ${common_debug.build_src_flags}
build_unflags     = ${common_debug.build_unflags}

[env:release_dev]

build_type        = release
platform          = ${common_devs.platform}
platform_packages = ${common_devs.platform_packages}
board             = ${common_devs.board}
build_flags       = ${common_release.build_flags}
build_src_flags   = ${common_release.build_src_flags}
build_unflags     = ${common_release.build_unflags}

[env:debug_dev]

build_type        = debug
platform          = ${common_devs.platform}
platform_packages = ${common_devs.platform_packages}
board             = ${common_devs.board}
build_flags       = ${common_debug.build_flags}
build_src_flags   = ${common_debug.build_src_flags}
build_unflags     = ${common_debug.build_unflags}

[env:release_due]

build_type        = release
platform          = ${common_prod_due.platform}
platform_packages = ${common_prod_due.platform_packages}
board             = ${common_prod_due.board}
build_flags       = ${common_release.build_flags}
build_src_flags   = ${common_release.build_src_flags}
build_unflags     = ${common_release.build_unflags}
    -lprintf_flt

[env:debug_due]

build_type        = debug
platform          = ${common_prod_due.platform}
platform_packages = ${common_prod_due.platform_packages}
board             = ${common_prod_due.board}
build_flags       = ${common_debug.build_flags}
build_src_flags   = ${common_debug.build_src_flags}
build_unflags     = ${common_debug.build_unflags}
    -lprintf_flt

[env:release_dev_due]

build_type        = release
platform          = ${common_devs_due.platform}
platform_packages = ${common_devs_due.platform_packages}
board             = ${common_devs_due.board}
build_flags       = ${common_release.build_flags}
build_src_flags   = ${common_release.build_src_flags}
build_unflags     = ${common_release.build_unflags}
    -lprintf_flt

[env:debug_dev_due]

build_type        = debug
platform          = ${common_devs_due.platform}
platform_packages = ${common_devs_due.platform_packages}
board             = ${common_devs_due.board}
build_flags       = ${common_debug.build_flags}
build_src_flags   = ${common_debug.build_src_flags}
build_unflags     = ${common_debug.build_unflags}
    -lprintf_flt

[env:release_metrom4]

build_type        = release
platform          = ${common_prod_metrom4.platform}
platform_packages = ${common_prod_metrom4.platform_packages}
board             = ${common_prod_metrom4.board}
build_flags       = ${common_release.build_flags}
build_src_flags   = ${common_release.build_src_flags}
build_unflags     = ${common_release.build_unflags}
    -lprintf_flt
    -larm_cortexM4lf_math

[env:debug_metrom4]

build_type        = debug
platform          = ${common_prod_metrom4.platform}
platform_packages = ${common_prod_metrom4.platform_packages}
board             = ${common_prod_metrom4.board}
build_flags       = ${common_debug.build_flags}
build_src_flags   = ${common_debug.build_src_flags}
build_unflags     = ${common_debug.build_unflags}
    -lprintf_flt
    -larm_cortexM4lf_math

[env:release_dev_metrom4]

build_type        = release
platform          = ${common_devs_metrom4.platform}
platform_packages = ${common_devs_metrom4.platform_packages}
board             = ${common_devs_metrom4.board}
build_flags       = ${common_release.build_flags}
build_src_flags   = ${common_release.build_src_flags}
build_unflags     = ${common_release.build_unflags}
    -lprintf_flt
    -larm_cortexM4lf_math

[env:debug_dev_metrom4]

build_type        = debug
platform          = ${common_devs_metrom4.platform}
platform_packages = ${common_devs_metrom4.platform_packages}
board             = ${common_devs_metrom4.board}
build_flags       = ${common_debug.build_flags}
build_src_flags   = ${common_debug.build_src_flags}
build_unflags     = ${common_debug.build_unflags}
    -lprintf_flt
    -larm_cortexM4lf_math
