
/*
 * This file is part of the `src-run/arduis-application` project.
 *
 * (c) Rob Frawley 2nd <rmf@src.run>
 *
 * For the full copyright and license information, please view the LICENSE.md
 * file that was distriBlted with this source code.
 */

#ifndef _ARDUIS_HR_PALETTES_GRADIENT
#define _ARDUIS_HR_PALETTES_GRADIENT

#include <Arduino.h>
#include <FastLED.h>

DECLARE_GRADIENT_PALETTE(Palette_BhwS1_Or_Pk_Pu_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS1_Bk_Bl_Gr_Wt_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS1_Gr_Bl_Pu_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS1_Or_Yl_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS1_Bk_DkPu_DkBl_DkPu_Bk_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS1_BlPu_BlGr_Wt_BlGr_BlPu_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS1_Rd_DkRd_LtRd_DkRd_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS1_Pu_Pi_Pu_Bl_LtBl_Bl_Pu_Pi_Pu_Bl_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS1_DkGrBl_LtGrBl_DkGrDl_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS1_DkGr_Gr_DkGr_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS1_LtGr_LtYl_LtOr_LtRd_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS1_Rd_Pi_Pu_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS2_DkGr_LtGr_DkGr_YlGr_DkGr_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS2_DkBlGr_BlGr_DkBlGr_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS2_LtGr_Gr_DkGr_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS2_DkPuRd_Pu_DkPuRd_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS2_DkPuBl_LtBl_Pu_LtPu_Pi_RdPu_DkRdPu_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS2_GrGy_GrBl_Gy_LtGy_Gy_Pu_PuGy_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS2_DkPu_Pu_Bl_BlGr_DkBlGr_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS2_DkGr_Gr_DkGr_DkRd_Rd_DkRd_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS2_DkPu_Pu_Rd_Or_Yl_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS2_GrBl_Gr_LtGr_LtYl_LtGr_Gr_GrBl_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS2_DkPu_LtPuRd_DkRd_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS3_Rd_Or_PsOr_Yl_YlOr_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS3_Yl_Or_Rd_Pi_Pu_LtBl_LtPu_LtBl_Pu_Pi_Or_Pi_Pu_DkPuBl_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS3_GyRd_LtRdGy_Gy_Rd_LtOr_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS3_Pu_Bl_BlGr_LtGrBl_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS3_LtYl_LtOr_Pi_DkRd_DkPuRd_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS4_LtBl_DkBl_LtBl_DkBl_LtBl_DkBlGy_c);
DECLARE_GRADIENT_PALETTE(Palette_BhwS4_OrGy_DkGy_OrGy_Yl_Or_OrGy_DkGy_LtOr_LtYl_DkGy_c);
DECLARE_GRADIENT_PALETTE(Palette_CbSeq_LtBl_DkBl_c);
DECLARE_GRADIENT_PALETTE(Palette_CbSeq_LtBl_Gr_c);
DECLARE_GRADIENT_PALETTE(Palette_CbSeq_LtBl_Pu_c);
DECLARE_GRADIENT_PALETTE(Palette_CbSeq_LtGr_Bl_c);
DECLARE_GRADIENT_PALETTE(Palette_CbSeq_LtGr_DkGr_c);
DECLARE_GRADIENT_PALETTE(Palette_CbSeq_Wt_Gy_Bk_c);
DECLARE_GRADIENT_PALETTE(Palette_CbSeq_LtOr_Rd_c);
DECLARE_GRADIENT_PALETTE(Palette_CbSeq_LtOr_DkOr_c);
DECLARE_GRADIENT_PALETTE(Palette_CbSeq_LtPu_Bl_Gr_c);
DECLARE_GRADIENT_PALETTE(Palette_CbSeq_LtPu_Bl_c);
DECLARE_GRADIENT_PALETTE(Palette_CbSeq_LtPu_Rd_c);
DECLARE_GRADIENT_PALETTE(Palette_CbSeq_LtPu_DkPu_c);
DECLARE_GRADIENT_PALETTE(Palette_CbSeq_LtRd_Pu_c);
DECLARE_GRADIENT_PALETTE(Palette_CbSeq_LtRd_DkRd_c);
DECLARE_GRADIENT_PALETTE(Palette_CbSeq_LtYl_LtGr_Bl_c);
DECLARE_GRADIENT_PALETTE(Palette_CbSeq_LtYl_Gr_c);
DECLARE_GRADIENT_PALETTE(Palette_CbSeq_LtYl_Or_Br_c);
DECLARE_GRADIENT_PALETTE(Palette_CbSeq_LtYl_Or_Rd_c);
DECLARE_GRADIENT_PALETTE(Palette_CbDiv_Br_Wt_BlGr_c);
DECLARE_GRADIENT_PALETTE(Palette_CbDiv_Pi_YlGr_c);
DECLARE_GRADIENT_PALETTE(Palette_CbDiv_Or_Pu_c);
DECLARE_GRADIENT_PALETTE(Palette_CbDiv_Rd_Bl_c);
DECLARE_GRADIENT_PALETTE(Palette_CbDiv_Rd_Gy_c);
DECLARE_GRADIENT_PALETTE(Palette_CbDiv_Rd_Yl_Bl_c);
DECLARE_GRADIENT_PALETTE(Palette_CbDiv_Rd_Yl_Gr_c);
DECLARE_GRADIENT_PALETTE(Palette_CbDiv_Rd_RdOr_Or_OrYl_Yl_YlGr_Gr_GrBl_Bl_c);
DECLARE_GRADIENT_PALETTE(Palette_CbDiv_PuRd_Wt_Gr_c);
DECLARE_GRADIENT_PALETTE(Palette_CbQua_LtGr_LtPu_LtOr_LtYl_DkBl_DkPi_DkBr_DkGy_c);
DECLARE_GRADIENT_PALETTE(Palette_CbQua_DkGrBl_DkOr_DkPu_DkPi_DkGr_DkYl_DkBr_DkGy_c);
DECLARE_GRADIENT_PALETTE(Palette_CbQua_LtBl_Bl_LtGr_Gr_LtRd_Rd_LtOr_Or_c);
DECLARE_GRADIENT_PALETTE(Palette_CbQua_PsGrBl_PsOr_PsPu_PsPi_PsGr_PsYl_PsBr_PsGy_c);
DECLARE_GRADIENT_PALETTE(Palette_CbQua_Rd_Bl_Gr_Pu_Or_Yl_Br_Pi_c);
DECLARE_GRADIENT_PALETTE(Palette_CbQua_LtGrBl_LtOr_LtPu_LtPi_LtGr_LtYl_LtBr_LtGy_c);
DECLARE_GRADIENT_PALETTE(Palette_CbQua_LtGrBl_LtYl_LtPu_LtRd_LtBl_LtOr_LtGr_LtPi_c);

#endif
